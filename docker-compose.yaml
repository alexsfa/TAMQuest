services:
  app:
    build: 
      context: .
      dockerfile: ./dockerfiles/Dockerfile.app
    ports:
      - "8051:8051" 
    volumes:
      - ./app:/app
    networks:
      - supabase-net
      
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: tamquest_db
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - supabase-net
  
  auth:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.auth
    ports:
      - "8081:8081"
    environment:
      GOTRUE_SITE_URL: http://localhost:8081
      API_EXTERNAL_URL: http://localhost:8081
      GOTRUE_JWT_SECRET: ${GOTRUE_JWT_SECRET}
      GOTRUE_DB_DRIVER: postgres
      DATABASE_URL: ${DATABASE_URL}
      GOTRUE_DISABLE_SIGNUP: "false"
      GOTRUE_MAILER_AUTOCONFIRM: "true"
    depends_on:
      - db
      - app
    restart: always
    networks:
      - supabase-net
    
  supabase_cli:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.cli
    working_dir: /workspace
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - db
      - auth
    networks:
      - supabase-net
      
  rest:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.rest
    ports:
      - "3001:3001"
    environment:
      PGRST_JWT_SECRET: ${GOTRUE_JWT_SECRET}
      DATABASE_URL: ${DATABASE_URL}
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: tamquest_db
      DB_HOST: db
      DB_PORT: 5432
    depends_on:
      - db
      - supabase_cli
    networks:
      - supabase-net

  realtime:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.realtime
    ports:
      - "4000:4000"
    environment:
      APP_NAME: realtime
      CLUSTER_STRATEGY: ""
      RLIMIT_NOFILE: 1048576
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      DATABASE_URL: ${DATABASE_URL}
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: tamquest_db
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${GOTRUE_JWT_SECRET}
      DB_MIGRATIONS_TABLE: realtime_schema_migrations
    depends_on:
      - db
      - supabase_cli
    networks:
      - supabase-net

  storage:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.storage
    ports:
      - "5000:5000"
    environment:
      ANON_KEY: ${ANON_KEY}
      SERVICE_ROLE_KEY: ${SERVICE_ROLE_KEY}
      POSTGREST_URL: http://rest:3000
      PGRST_JWT_SECRET: ${GOTRUE_JWT_SECRET}
      DATABASE_URL: ${DATABASE_URL}
      GOTRUE_URL: http://auth:8081
      FILE_STORAGE_BACKEND_PATH: /storage_data
    depends_on:
      - auth
    networks:
      - supabase-net
    volumes:
    - ./storage-folder:/storage_data

networks:
  supabase-net:
    driver: bridge